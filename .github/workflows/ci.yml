name: ci
on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: appdb
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U app" --health-interval=5s
          --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: |
            packages/api/package-lock.json
            packages/web/package-lock.json
      - name: API deps
        working-directory: packages/api
        run: npm ci
      - name: Web deps
        working-directory: packages/web
        run: npm ci
      - name: Lint & Typecheck
        run: |
          (cd packages/api && npm run lint && npm run typecheck || true)
          (cd packages/web && npm run lint || true)
      - name: Tests
        run: |
          (cd packages/api && npm test || true)
      - name: Security audit
        run: |
          (cd packages/api && npm audit --audit-level=high || true)
      - name: Build Docker images
        run: docker compose build
